% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/two_way_interaction_plot.R
\name{two_way_interaction_plot}
\alias{two_way_interaction_plot}
\title{Two-way Interaction Plot}
\usage{
two_way_interaction_plot(
  model,
  data = NULL,
  graph_label_name = NULL,
  y_lim = NULL,
  plot_color = FALSE
)
}
\arguments{
\item{model}{object from `lm`, `nlme`, `lme4`, or `lmerTest`}

\item{data}{data frame. If the function is unable to extract data frame from the object, then you may need to pass it directly}

\item{graph_label_name}{vector of length 3 or function. Vector should be passed in the form of `c(response_var, predict_var1, predict_var2)`. Function should be passed as a switch function that return the label based on the name passed (e.g., a switch function)}

\item{y_lim}{the plot's upper and lower limit for the y-axis. Length of 2. Example: `c(lower_limit, upper_limit)`}

\item{plot_color}{default if `FALSE`. Set to `TRUE` if you want to plot in color}
}
\value{
an object of class `ggplot`
}
\description{
`r lifecycle::badge("stable")` \cr
The function creates a two-way interaction plot. It will creates a plot with Â± 1 SD from the mean of the independent variable. See supported model below.
I recommend using concurrently with `lm_model` or `lme_model`.
}
\details{
It appears that ``predict` cannot handle categorical factors. All variables are converted to numeric before plotting.
}
\examples{
lm_fit <- lm(Sepal.Length ~ Sepal.Width * Petal.Width,
  data = iris
)
two_way_interaction_plot(lm_fit, data = iris)

}
